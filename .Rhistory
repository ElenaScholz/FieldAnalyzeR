NULL
b
aggregate <- function(df, aggregation_type){
if (aggregation_type == "monthly"){
monthly_temperature <- df %>%
group_by(Month, Year) %>%
summarise(mean_temperature = mean(Temperature_C),
std_temperature = sd(Temperature_C),
min_temperature = min(Temperature_C),
max_temperature = max(Temperature_C))
}
}
monthly_temperature <- aggregate(logger1, aggregation_type = "monthly")
# Plot: Plots mean Temperature for each month between 2010 and 2020
a <- ggplot(monthly_temperature, aes(Year, max_temperature, colour = Month)) +
geom_point(size = 0.5) +
geom_smooth(method = "loess") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.title.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = my_colour) +
labs(title = "Monthly mean maximum temperature", subtitle = "Muragl Logger data", y = "Degrees Celsius") +
facet_wrap(~Month) +
NULL
b <- ggplot(monthly_temperature, aes(Year, min_temperature, colour = Month)) +
geom_point(size = 0.5) +
geom_smooth(method = "loess") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.title.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = my_colour) +
labs(title = "Monthly mean minimum temperature", subtitle = "Muragl Logger data", y = "Degrees Celsius") +
facet_wrap(~Month) +
NULL
plot_grid(a, b)
c <- ggplot(monthly_temperature, aes(Month, min_temperature, colour = Month)) +
geom_line(size = 0.5) +
geom_smooth(method = "loess") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.title.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = my_colour) +
labs(title = "Monthly mean minimum temperature", subtitle = "Muragl Logger data", y = "Degrees Celsius") +
facet_wrap(~Year) +
NULL
c
c <- ggplot(monthly_temperature, aes(Month, min_temperature, colour = Month)) +
geom_line(size = 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.title.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = my_colour) +
labs(title = "Monthly mean minimum temperature", subtitle = "Muragl Logger data", y = "Degrees Celsius") +
facet_wrap(~Year) +
NULL
c
c <- ggplot(monthly_temperature, aes(Month, mean_temperature, colour = Month)) +
geom_line(size = 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.title.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = my_colour) +
labs(title = "Monthly mean minimum temperature", subtitle = "Muragl Logger data", y = "Degrees Celsius") +
facet_wrap(~Year) +
NULL
c
c <- ggplot(monthly_temperature, aes(Month, mean_temperature, colour = Month)) +
geom_line(size = 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.title.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = my_colour) +
labs(title = "Monthly mean minimum temperature", subtitle = "Muragl Logger data", y = "Degrees Celsius") +
#facet_wrap(~Year) +
NULL
c
c <- ggplot(monthly_temperature, aes(Month, mean_temperature, colour = Month)) +
geom_line(size = 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.title.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = my_colour) +
labs(title = "Monthly mean minimum temperature", subtitle = "Muragl Logger data", y = "Degrees Celsius") +
facet_wrap(~Year) +
NULL
c
monthly_temperature
c <- ggplot(monthly_temperature, aes(Month, mean_temperature, colour = Year)) +
geom_line(size = 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.title.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = my_colour) +
labs(title = "Monthly mean minimum temperature", subtitle = "Muragl Logger data", y = "Degrees Celsius") +
facet_wrap(~ Year) +
NULL
c
print(c)
ggp
c <- ggplot(monthly_temperature, aes(Month, mean_temperature, colour = as.factor(Year))) +
geom_line(size = 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.title.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = my_colour) +
labs(title = "Monthly mean minimum temperature", subtitle = "Muragl Logger data", y = "Degrees Celsius") +
facet_wrap(~ Year) +
NULL
c
c <- ggplot(monthly_temperature, aes(Month, mean_temperature)) +
geom_line(size = 0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.title.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = my_colour) +
labs(title = "Monthly mean minimum temperature", subtitle = "Muragl Logger data", y = "Degrees Celsius") +
facet_wrap(~ Year) +
NULL
c
plot(monthly_temperature$mean_temperature)
c <- monthly_temperature %>%
filter(year != 2010) %>%
group_by(year) %>%
summarise(year_mean = mean(mean_temperature)) %>%
ggplot(., aes(year, year_mean)) +
geom_point() +
geom_line() +
geom_smooth(method = "loess") +
theme(axis.title.x = element_blank(),
legend.position = "none") +
labs(title = "Annual mean maximum temperature", subtitle = "Brisbane Regional Office: 1910 - 1985", y = "Degrees Celsius") +
NULL
c <- monthly_temperature %>%
group_by(year) %>%
summarise(year_mean = mean(mean_temperature)) %>%
ggplot(., aes(year, year_mean)) +
geom_point() +
geom_line() +
geom_smooth(method = "loess") +
theme(axis.title.x = element_blank(),
legend.position = "none") +
labs(title = "Annual mean maximum temperature", subtitle = "Brisbane Regional Office: 1910 - 1985", y = "Degrees Celsius") +
NULL
c <- monthly_temperature %>%
filter(Year != 2010) %>%
group_by(Year) %>%
summarise(year_mean = mean(mean_temperature)) %>%
ggplot(., aes(Year, year_mean)) +
geom_point() +
geom_line() +
geom_smooth(method = "loess") +
theme(axis.title.x = element_blank(),
legend.position = "none") +
labs(title = "Annual mean maximum temperature", subtitle = "Brisbane Regional Office: 1910 - 1985", y = "Degrees Celsius") +
NULL
c
c <- monthly_temperature %>%
filter(Year != 2010) %>%
group_by(Year) %>%
summarise(year_mean = mean(mean_temperature)) %>%
ggplot(., aes(Year, year_mean)) +
geom_point() +
geom_line() +
geom_smooth(method = "loess") +
theme(axis.title.x = element_blank(),
legend.position = "none") +
labs(title = "Annual mean temperature", subtitle = "Murgal Logger data", y = "Degrees Celsius") +
NULL
c
c <- monthly_temperature %>%
filter(Year != 2010) %>%
group_by(Year) %>%
summarise(year_mean = mean(min_temperature)) %>%
ggplot(., aes(Year, year_mean)) +
geom_point() +
geom_line() +
geom_smooth(method = "loess") +
theme(axis.title.x = element_blank(),
legend.position = "none") +
labs(title = "Annual mean temperature", subtitle = "Murgal Logger data", y = "Degrees Celsius") +
NULL
c
c <- monthly_temperature %>%
filter(Year != 2010) %>%
group_by(Year) %>%
summarise(year_mean = mean(min_temperature)) %>%
ggplot(., aes(Year, year_mean)) +
geom_point() +
geom_line() +
geom_smooth(method = "loess") +
theme(axis.title.x = element_blank(),
legend.position = "none") +
labs(title = "Annual mean minimum temperature", subtitle = "Murgal Logger data", y = "Degrees Celsius") +
NULL
c
d <- monthly_temperature %>%
ggplot(aes(x = Month, y = mean_temperature))+
geom_line()+
NULL
d
d <- monthly_temperature %>%
ggplot(aes(x = Month, y = mean_temperature))+
geom_line()+
facet_wrap(~Year, ncol = 3)+
NULL
d
d <- monthly_temperature %>%
ggplot(aes(x = Year, y = mean_temperature))+
geom_line()+
facet_wrap(~Year, ncol = 3)+
NULL
d
d <- monthly_temperature %>%
ggplot(aes(x = Month, y = mean_temperature))+
geom_line()+
facet_wrap(~Year, ncol = 3)+
NULL
d
d <- monthly_temperature %>%
ggplot(aes(x = Month, y = mean_temperature))+
geom_point()+
facet_wrap(~Year, ncol = 3)+
NULL
d
d <- monthly_temperature %>%
ggplot(aes(x = Month, y = mean_temperature))+
# geom_point()+
geom_abline()+
facet_wrap(~Year, ncol = 3)+
NULL
d
d <- monthly_temperature %>%
ggplot(aes(x = Month, y = mean_temperature))+
geom_point()+
geom_abline()+
facet_wrap(~Year, ncol = 3)+
NULL
d
d <- monthly_temperature %>%
ggplot(aes(x = Month, y = mean_temperature))+
geom_point()+
geom_line()+
facet_wrap(~Year, ncol = 3)+
NULL
d
d <- monthly_temperature %>%
ggplot(aes(x = Month, y = mean_temperature))+
geom_bar()+
facet_wrap(~Year, ncol = 3)+
NULL
d
d <- monthly_temperature %>%
ggplot(aes(x = Month, y = mean_temperature))+
geom_bar(stat = "identity")+
facet_wrap(~Year, ncol = 3)+
NULL
d
d <- monthly_temperature %>%
ggplot(aes(x = Month, y = mean_temperature), color = Month)+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.title.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = my_colour) +
labs(title = "Monthly mean maximum temperature", subtitle = "Muragl Logger data", y = "Degrees Celsius") +
facet_wrap(~Year, ncol = 3)+
NULL
d
d <- monthly_temperature %>%
ggplot(aes(x = Month, y = mean_temperature), color = Month)+
geom_bar(stat = "identity")+
facet_wrap(~Year, ncol = 3)+
NULL
d
aggregate <- function(df, aggregation_type){
if (aggregation_type == "daily"){
daily_temperature <- df %>%
group_by(Date) %>%
summarise(mean_temperature = mean(Temperature_C),
std_temperature = sd(Temperature_C),
min_temperature = min(Temperature_C),
max_temperature = max(Temperature_C))
}
if (aggregation_type == "monthly"){
monthly_temperature <- df %>%
group_by(Month, Year) %>%
summarise(mean_temperature = mean(Temperature_C),
std_temperature = sd(Temperature_C),
min_temperature = min(Temperature_C),
max_temperature = max(Temperature_C))
}
}
monthly_temperature <- aggregate(logger1, aggregation_type = "monthly")
daily_temperature <- aggregate(logger1, aggregation_type = "daily")
aggregate <- function(df, aggregation_type){
if (aggregation_type == "daily"){
daily_temperature <- df %>%
group_by(Date) %>%
summarise(mean_temperature = mean(Temperature_C),
std_temperature = sd(Temperature_C),
min_temperature = min(Temperature_C),
max_temperature = max(Temperature_C))
}
if (aggregation_type == "monthly"){
monthly_temperature <- df %>%
group_by(Month, Year) %>%
summarise(mean_temperature = mean(Temperature_C),
std_temperature = sd(Temperature_C),
min_temperature = min(Temperature_C),
max_temperature = max(Temperature_C))
}
}
daily_temperature <- aggregate(logger1, aggregation_type = "daily")
aggregate <- function(df, aggregation_type){
if (aggregation_type == "daily"){
daily_temperature <- df %>%
group_by(Date) %>%
summarise(mean_temperature = mean(Temperature_C),
std_temperature = sd(Temperature_C),
min_temperature = min(Temperature_C),
max_temperature = max(Temperature_C))
}
else if (aggregation_type == "monthly"){
monthly_temperature <- df %>%
group_by(Month, Year) %>%
summarise(mean_temperature = mean(Temperature_C),
std_temperature = sd(Temperature_C),
min_temperature = min(Temperature_C),
max_temperature = max(Temperature_C))
}
}
daily_temperature <- aggregate(logger1, aggregation_type = "daily")
View(daily_temperature)
aggregate <- function(df, aggregation_type){
if (aggregation_type == "daily"){
daily_temperature <- df %>%
group_by(Date) %>%
summarise(mean_temperature = mean(Temperature_C),
std_temperature = sd(Temperature_C),
min_temperature = min(Temperature_C),
max_temperature = max(Temperature_C)) %>%
mutate(Julian=yday(Date))
}
else if (aggregation_type == "monthly"){
monthly_temperature <- df %>%
group_by(Month, Year) %>%
summarise(mean_temperature = mean(Temperature_C),
std_temperature = sd(Temperature_C),
min_temperature = min(Temperature_C),
max_temperature = max(Temperature_C))
}
}
daily_temperature <- aggregate(logger1, aggregation_type = "daily")
# Plot: Plots mean Temperature for each month between 2010 and 2020
a <- ggplot(daily_temperature, aes(Year, max_temperature, colour = Month)) +
geom_point(size = 0.5) +
geom_smooth(method = "loess") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.title.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = my_colour) +
labs(title = "Monthly mean maximum temperature", subtitle = "Muragl Logger data", y = "Degrees Celsius") +
facet_wrap(~Month) +
NULL
b <- ggplot(monthly_temperature, aes(Year, min_temperature, colour = Month)) +
geom_point(size = 0.5) +
geom_smooth(method = "loess") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.title.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = my_colour) +
labs(title = "Monthly mean minimum temperature", subtitle = "Muragl Logger data", y = "Degrees Celsius") +
facet_wrap(~Month) +
NULL
plot_grid(a, b)
aggregate <- function(df, aggregation_type){
if (aggregation_type == "daily"){
daily_temperature <- df %>%
group_by(Date) %>%
summarise(mean_temperature = mean(Temperature_C),
std_temperature = sd(Temperature_C),
min_temperature = min(Temperature_C),
max_temperature = max(Temperature_C)) %>%
mutate(Julian=yday(Date),
Year = year(Date),
Month = month(Date),
Day = day(Date))
}
else if (aggregation_type == "monthly"){
monthly_temperature <- df %>%
group_by(Month, Year) %>%
summarise(mean_temperature = mean(Temperature_C),
std_temperature = sd(Temperature_C),
min_temperature = min(Temperature_C),
max_temperature = max(Temperature_C))
}
}
daily_temperature <- aggregate(logger1, aggregation_type = "daily")
# Plot: Plots mean Temperature for each month between 2010 and 2020
a <- ggplot(daily_temperature, aes(Year, max_temperature, colour = Month)) +
geom_point(size = 0.5) +
geom_smooth(method = "loess") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.title.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = my_colour) +
labs(title = "Monthly mean maximum temperature", subtitle = "Muragl Logger data", y = "Degrees Celsius") +
facet_wrap(~Month) +
NULL
b <- ggplot(monthly_temperature, aes(Year, min_temperature, colour = Month)) +
geom_point(size = 0.5) +
geom_smooth(method = "loess") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.title.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = my_colour) +
labs(title = "Monthly mean minimum temperature", subtitle = "Muragl Logger data", y = "Degrees Celsius") +
facet_wrap(~Month) +
NULL
plot_grid(a, b)
daily_plot <- ggplot(daily_temperature, aes(Month, mean_temperature))+
geom_line()+
facet_wrap(~Year)
daily_plot <- ggplot(daily_temperature, aes(Month, mean_temperature))+
geom_line()+
facet_wrap(~Year)+
NULL
daily_plot
daily_plot <- ggplot(daily_temperature, aes(Julian, mean_temperature))+
geom_line()+
facet_wrap(~Year)+
NULL
daily_plot
daily_plot <- ggplot(daily_temperature, aes(Date, mean_temperature))+
geom_line()+
facet_wrap(~Year)+
NULL
daily_plot
daily_plot <- ggplot(daily_temperature, aes(Julian, mean_temperature))+
geom_line()+
facet_wrap(~Year)+
NULL
daily_plot
daily_plot <- ggplot(daily_temperature, aes(Year, mean_temperature))+
geom_line()+
facet_wrap(~Month)+
NULL
daily_plot
gc()
devtools::document()
devtools::document()
usethis::use_package("readxl")
usethis::use_package("tools")
usethis::use_package("utils")
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
rearrange_dataset <- function( column_organization = list(No = Number, Time = Time, X1.oC = Temperature_C, HK.Bat.V = Battery_Voltage)){
print(column_organization[No])
}
test <- rearrange_dataset()
rearrange_dataset <- function( column_organization = list(No = 'Number', Time = 'Time', X1.oC = 'Temperature_C', HK.Bat.V = 'Battery_Voltage')){
print(column_organization[No])
}
test <- rearrange_dataset()
rearrange_dataset <- function( column_organization = list('No' = 'Number', 'Time '= 'Time', 'X1.oC' = 'Temperature_C', 'HK.Bat.V' = 'Battery_Voltage')){
print(column_organization[No])
}
test <- rearrange_dataset()
rearrange_dataset <- function( column_organization = list('No' = 'Number', 'Time '= 'Time', 'X1.oC' = 'Temperature_C', 'HK.Bat.V' = 'Battery_Voltage')){
print(column_organization(No))
}
test <- rearrange_dataset()
rearrange_dataset <- function( column_organization = list('No' = 'Number', 'Time '= 'Time', 'X1.oC' = 'Temperature_C', 'HK.Bat.V' = 'Battery_Voltage')){
print(column_organization(No))
}
test <- rearrange_dataset(column_organization = list('No' = 'Number', 'Time '= 'Time', 'X1.oC' = 'Temperature_C', 'HK.Bat.V' = 'Battery_Voltage'))
rearrange_dataset <- function(df){
logger_df <- df %>%
dplyr::rename(Number =  No,
Logger_ID = Logger_ID,
Time = Time,
Temperature_C = X1.oC,
Battery_Voltage = HK.Bat.V)
}
list_df <- read_data(input_directory = "/home/ela/Documents/R-FinalExam/Muragl/")
logger1 <- list_df$A50276_20231006143640.csv
rearrange_dataset(logger1)
View(logger1)
rearrange_dataset <- function(df){
logger_df <- df %>%
dplyr::rename(Number =  No,
Logger_ID = Logger_ID,
Time = Time,
Temperature_C = X1.oC,
Battery_Voltage = HK.Bat.V) %>%
dplyr::mutate(Time = as.POSIXct(Time, format = "%d.%m.%Y %H:%M:%S")) %>%
dplyr::mutate(Date = as.Date(Time)) %>% # Extracting only the date component
dplyr::mutate(Julian = yday(Time)) %>%
dplyr::mutate(Month = factor(month.name[as.integer(format(Time, "%m"))], levels = month.name)) %>%
dplyr::mutate(Year = year(Time))
return(logger_df)
}
rearrange_dataset(logger1)
logger1 <- rearrange_dataset(logger1)
View(logger1)
