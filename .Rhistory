usethis::use_mit_license(name = "Elena Scholz")
usethis::use_mit_license(name = "Elena Scholz)
usethis::use_mit_license()
stop()
print("hello")
usethis::use_mit_license()
usethis::use_readme_rmd()
usethis::use_package("stringr")
usethis::use_pipe()
usethis::use_roxygen_md()
devtools::document()
devtools::check()
reorder_logger_data <- function(indir, outdir, save){
if (!is.character(indir)){
stop("indir should be a string containing your input directory path")
}
if (!is.character(outdir)){
stop("outdir should be a string containing your input directory path")
}
if(!is.logical(save)){
stop("save needs to be either TRUE or FALSE")
}
library(tidyverse) # string slicing
library(lubridate)
indir <- setwd(indir)
files <- list.files(indir)
for (i in files){
logger_ds <- read.csv(paste0(indir,"/",i) , sep = ',', comment.char = '#') %>%
mutate(date_time = str_split_fixed(Time, " ", 2)) %>%
mutate(Date=as.Date(date_time[,1], format = "%d.%m.%Y"),
Time = format(as.POSIXct(date_time[, 2], format = "%H:%M:%S"), format = "%H:%M:%S")) %>%
select(-date_time) %>%
mutate(Year=year(Date),
Month=month(Date),
Day=day(Date)) %>%
select(No, Date, Year, Month, Day, Time, X1.oC, HK.Bat.V)
# Saving the Files if wanted ->
if (save == TRUE){
if (file.exists(paste0(outdir,i))){
print(paste("File exists:", i))}
else{write.csv(logger_ds, file = paste0(outdir,i), row.names = FALSE)}}
}
return(logger_ds = logger_ds)
}
logger.data <- reorder_logger_data(indir,outdir, save = FALSE)
indir <- "/home/ela/Documents/R-FinalExam/Muragl"
outdir="/home/ela/Documents/R-FinalExam/reordered_data/"
logger.data <- reorder_logger_data(indir,outdir, save = FALSE)
devtools::document()
setwd("/home/ela/Documents/R-Projects/loggeranalysis")
devtools::document()
devtools::document()
devtools::check()
usethis::use_package("utils")
devtools::document(),
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
getwd()
indir <- "../R-FinalExam/packagetest/reorder"
getwd()
usethis::use_package("dplyr")
usethis::use_package("stringr")
usethis::use_package("magrittr")
devtools::use_roxygen_md()
devtools::document()
devtools::document()
usethis::use_package("dplyr")
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
merge_logger.ds <- function(indir, outdir, save = TRUE){
if (!is.character(indir)){
stop("indir should be a string containing your input directory path")
}
if (!is.character(outdir)){
stop("outdir should be a string containing your input directory path")
}
if(!is.logical(save)){
stop("save needs to be either TRUE or FALSE")
}
all_logger.ds <- list()
files <- list.files(indir)
for (i in files){
logger_ds <- read.csv(paste0(indir,"/",i) , sep = ',', comment.char = '#') %>%
all_logger.ds <- c(all_logger.ds, list(logger_ds))
}
combined_logger.ds <- combined_dataset <- do.call(rbind, all_logger.ds)
# Saving the Files if wanted
if (save == TRUE){
if (file.exists(paste0(outdir, 'combined_loggerByID'))){
print(paste("File exists:", 'combined_loggerByID'))}
else{write.csv(combined_logger.ds, file = paste0(outdir,'combined_loggerByID'), row.names = FALSE)}}
}
merge_logger.ds <- function(indir, outdir, save = TRUE){
if (!is.character(indir)){
stop("indir should be a string containing your input directory path")
}
if (!is.character(outdir)){
stop("outdir should be a string containing your input directory path")
}
if(!is.logical(save)){
stop("save needs to be either TRUE or FALSE")
}
all_logger.ds <- list()
files <- list.files(indir)
print(files)
for (i in files){
logger_ds <- read.csv(paste0(indir,"/",i) , sep = ',', comment.char = '#') %>%
all_logger.ds <- c(all_logger.ds, list(logger_ds))
}
combined_logger.ds <- combined_dataset <- do.call(rbind, all_logger.ds)
# Saving the Files if wanted
if (save == TRUE){
if (file.exists(paste0(outdir, 'combined_loggerByID'))){
print(paste("File exists:", 'combined_loggerByID'))}
else{write.csv(combined_logger.ds, file = paste0(outdir,'combined_loggerByID'), row.names = FALSE)}}
}
merge_logger.ds(indir = '/home/ela/Documents/R-FinalExam/packagetest/append_df', outdir = '/home/ela/Documents/R-FinalExam/packagetest/append_df/', save = FALSE)
devtools::check()
merge_logger.ds <- function(indir, outdir, save = TRUE){
if (!is.character(indir)){
stop("indir should be a string containing your input directory path")
}
if (!is.character(outdir)){
stop("outdir should be a string containing your input directory path")
}
if(!is.logical(save)){
stop("save needs to be either TRUE or FALSE")
}
all_logger.ds <- list()
files <- list.files(indir)
for (i in files){
logger_ds <- read.csv(paste0(indir,"/",i) , sep = ',', comment.char = '#') %>%
all_logger.ds <- c(all_logger.ds, list(logger_ds))
}
combined_logger.ds <- combined_dataset <- do.call(rbind, all_logger.ds)
# Saving the Files if wanted
if (save == TRUE){
if (file.exists(paste0(outdir, 'combined_loggerByID'))){
print(paste("File exists:", 'combined_loggerByID'))}
else{write.csv(combined_logger.ds, file = paste0(outdir,'combined_loggerByID'), row.names = FALSE)}}
}
merge_logger.ds <- function(indir, outdir, save = TRUE){
if (!is.character(indir)){
stop("indir should be a string containing your input directory path")
}
if (!is.character(outdir)){
stop("outdir should be a string containing your input directory path")
}
if(!is.logical(save)){
stop("save needs to be either TRUE or FALSE")
}
all_logger.ds <- list()
files <- list.files(indir)
print(files)
# for (i in files){
#   logger_ds <- read.csv(paste0(indir,"/",i) , sep = ',', comment.char = '#') %>%
#
#     all_logger.ds <- c(all_logger.ds, list(logger_ds))
# }
#
# combined_logger.ds <- combined_dataset <- do.call(rbind, all_logger.ds)
#
# # Saving the Files if wanted
# if (save == TRUE){
#   if (file.exists(paste0(outdir, 'combined_loggerByID'))){
#     print(paste("File exists:", 'combined_loggerByID'))}
#   else{write.csv(combined_logger.ds, file = paste0(outdir,'combined_loggerByID'), row.names = FALSE)}}
}
merge_logger.ds(indir = '/home/ela/Documents/R-FinalExam/packagetest/append_df', outdir = '/home/ela/Documents/R-FinalExam/packagetest/append_df/', save = FALSE)
files <- list.files(indir)
indir = '/home/ela/Documents/R-FinalExam/packagetest/append_df'
files <- list.files(indir)
devtools::check()
indir = '/home/ela/Documents/R-FinalExam/packagetest/append_df'
files <- list.files(indir)
print(files)
for (i in files){
logger_ds <- read.csv(paste0(indir,"/",i) , sep = ',', comment.char = '#') %>%
all_logger.ds <- c(all_logger.ds, list(logger_ds))
}
all_logger.ds <- list()
for (i in files){
logger_ds <- read.csv(paste0(indir,"/",i) , sep = ',', comment.char = '#') %>%
all_logger.ds <- c(all_logger.ds, list(logger_ds))
}
for (i in files){
logger_ds <- read.csv(paste0(indir,"/",i) , sep = ',', comment.char = '#')
all_logger.ds <- c(all_logger.ds, list(logger_ds))
}
View(all_logger.ds)
View(all_logger.ds)
library(data.table)
for (i in files){
logger_ds <- read.csv(paste0(indir,"/",i) , sep = ',', comment.char = '#')
all_logger.ds <- c(all_logger.ds, list(logger_ds))
}
combined_logger.ds <- combined_dataset <- data.table::rbindlist(all_logger.ds)
usethis::use_package("data.table")
devtools::check()
devtools::document()
warnings()
devtools::check()
devtools::check()
devtools::check()
