# create daily datasets with "D";"T_x";"T_sd";"T_max";"T_min";"n"
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds = data.frame()
daily_temperature_ds <- extracted_dates %>%
group_by(Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE)) %>%
summarise(std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE))
return(daily_temperature_ds = daily_temperature_ds)
}
}
input_file <- "~/Documents/R-FinalExam/packagetest/spatialdata/logger_geodata.csv"
name_temperature_column ="X1.oC"
data_tests <- aggregate_data(input_file, name_temperature_column)
aggregate_data <- function(input_file, name_temperaure_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', "X1.oC")]
# print(str(ds))
# create daily datasets with "D";"T_x";"T_sd";"T_max";"T_min";"n"
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds = data.frame()
daily_temperature_ds <- extracted_dates %>%
group_by(Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE)) %>%
summarise(std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE))
return(daily_temperature_ds = daily_temperature_ds)
}
}
input_file <- "~/Documents/R-FinalExam/packagetest/spatialdata/logger_geodata.csv"
name_temperature_column ="X1.oC"
data_tests <- aggregate_data(input_file, name_temperature_column)
name_temperature_column ="X1.oC"
data_tests <- aggregate_data(input_file, name_temperature_column)
aggregate_data <- function(input_file, name_temperaure_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', "X1.oC")]
# print(str(ds))
# create daily datasets with "D";"T_x";"T_sd";"T_max";"T_min";"n"
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds = data.frame()
daily_temperature_ds <- extracted_dates %>%
group_by(Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE))
# %>%
#   summarise(std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE))
#
return(c(daily_temperature_ds = daily_temperature_ds, extracted_dates = extracted_dates))
}
}
input_file <- "~/Documents/R-FinalExam/packagetest/spatialdata/logger_geodata.csv"
name_temperature_column ="X1.oC"
data_tests <- aggregate_data(input_file, name_temperature_column)
data_tests$extracted_dates.Date
data_tests$extracted_dates.X1.oC
extracted_dates <- ds[, c('Logger.ID', 'Date', "X1.oC")]
aggregate_data <- function(input_file, name_temperaure_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', "X1.oC")]
# print(str(ds))
# create daily datasets with "D";"T_x";"T_sd";"T_max";"T_min";"n"
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds = data.frame()
daily_temperature_ds <- extracted_dates %>%
group_by(Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperaure_column), na.rm = TRUE)) %>%
summarise(std_temperature = sd(!!sym(name_temperaure_column), na.rm = TRUE))
return(c(daily_temperature_ds = daily_temperature_ds, extracted_dates = extracted_dates))
}
}
input_file <- "~/Documents/R-FinalExam/packagetest/spatialdata/logger_geodata.csv"
name_temperature_column ="X1.oC"
data_tests <- aggregate_data(input_file, name_temperature_column)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', "X1.oC")]
# print(str(ds))
# create daily datasets with "D";"T_x";"T_sd";"T_max";"T_min";"n"
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds = data.frame()
daily_temperature_ds <- extracted_dates %>%
group_by(Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE))
daily_temperature_ds <- daily_temperature_ds %>%
summarise(std_temperature = sd(!!sym(extracted_dates$name_temperature_column), na.rm = TRUE))
return(c(daily_temperature_ds = daily_temperature_ds, extracted_dates = extracted_dates))
}
}
input_file <- "~/Documents/R-FinalExam/packagetest/spatialdata/logger_geodata.csv"
name_temperature_column ="X1.oC"
data_tests <- aggregate_data(input_file, name_temperature_column)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
# print(str(ds))
# create daily datasets with "D";"T_x";"T_sd";"T_max";"T_min";"n"
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds = data.frame()
daily_temperature_ds <- extracted_dates %>%
group_by(Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE))
daily_temperature_ds <- daily_temperature_ds %>%
summarise(std_temperature = sd(!!sym(extracted_dates$name_temperature_column), na.rm = TRUE))
return(c(daily_temperature_ds = daily_temperature_ds, extracted_dates = extracted_dates))
}
}
input_file <- "~/Documents/R-FinalExam/packagetest/spatialdata/logger_geodata.csv"
name_temperature_column ="X1.oC"
data_tests <- aggregate_data(input_file, name_temperature_column)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE))
return(list(daily_temperature_ds = daily_temperature_ds, extracted_dates = extracted_dates))
}
}
input_file <- "~/Documents/R-FinalExam/packagetest/spatialdata/logger_geodata.csv"
name_temperature_column ="X1.oC"
data_tests <- aggregate_data(input_file, name_temperature_column)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE))
return(daily_temperature_ds = daily_temperature_ds)
}
}
input_file <- "~/Documents/R-FinalExam/packagetest/spatialdata/logger_geodata.csv"
name_temperature_column ="X1.oC"
data_tests <- aggregate_data(input_file, name_temperature_column)
head(data_tests)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE),
n = sum(!!sym(name_temperature_column), na.rm = TRUE))
return(daily_temperature_ds = daily_temperature_ds)
}
}
input_file <- "~/Documents/R-FinalExam/packagetest/spatialdata/logger_geodata.csv"
name_temperature_column ="X1.oC"
data_tests <- aggregate_data(input_file, name_temperature_column)
head(data_tests)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE),
n = count(!!sym(name_temperature_column), na.rm = TRUE))
return(daily_temperature_ds = daily_temperature_ds)
}
}
data_tests <- aggregate_data(input_file, name_temperature_column)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE),
n = n(!!sym(name_temperature_column), na.rm = TRUE))
return(daily_temperature_ds = daily_temperature_ds)
}
}
data_tests <- aggregate_data(input_file, name_temperature_column)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE),
n = n())
return(daily_temperature_ds = daily_temperature_ds)
}
}
input_file <- "~/Documents/R-FinalExam/packagetest/spatialdata/logger_geodata.csv"
name_temperature_column ="X1.oC"
data_tests <- aggregate_data(input_file, name_temperature_column)
data_tests
View(data_tests)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Logger.ID, Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE),
n = n())
return(daily_temperature_ds = daily_temperature_ds)
}
}
data_tests <- aggregate_data(input_file, name_temperature_column)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Logger.ID, Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE),
n = n(mean_temperature))
return(daily_temperature_ds = daily_temperature_ds)
}
}
data_tests <- aggregate_data(input_file, name_temperature_column)
72/24
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Logger.ID, Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE)) %>%
summarise(n = n)
return(daily_temperature_ds = daily_temperature_ds)
}
}
data_tests <- aggregate_data(input_file, name_temperature_column)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Logger.ID, Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE)) %>%
summarise(n = n())
return(daily_temperature_ds = daily_temperature_ds)
}
}
data_tests <- aggregate_data(input_file, name_temperature_column)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Logger.ID, Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE),
n = n())
return(daily_temperature_ds = daily_temperature_ds)
}
}
input_file <- "~/Documents/R-FinalExam/packagetest/spatialdata/logger_geodata.csv"
name_temperature_column ="X1.oC"
data_tests <- aggregate_data(input_file, name_temperature_column)
head(data_tests)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Logger.ID, Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE))
# Calculate count of temperature observations per day
n_count <- extracted_dates %>%
group_by(Logger.ID, Date) %>%
summarise(n = n())
return(daily_temperature_ds = daily_temperature_ds)
}
}
data_tests <- aggregate_data(input_file, name_temperature_column)
head(data_tests)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Logger.ID, Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE)) %>%
summarise(n = n())
return(daily_temperature_ds = daily_temperature_ds)
}
}
data_tests <- aggregate_data(input_file, name_temperature_column)
View(data_tests)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Logger.ID, Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE))
# number of observations
# daily_temperature_ds$n <-
return(daily_temperature_ds = daily_temperature_ds)
}
}
data_tests <- aggregate_data(input_file, name_temperature_column)
count(data_tests$mean_temperature)
n(data_tests$mean_temperature)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Logger.ID, Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE))
# Calculate count of temperature observations per day
n_count <- extracted_dates %>%
group_by(Logger.ID, Date) %>%
summarise(n = n())
# Merge the count with other summary statistics
daily_temperature_ds <- merge(daily_temperature_ds, n_count, by = c("Logger.ID", "Date"), all.x = TRUE)
return(daily_temperature_ds = daily_temperature_ds)
}
}
input_file <- "~/Documents/R-FinalExam/packagetest/spatialdata/logger_geodata.csv"
name_temperature_column ="X1.oC"
data_tests <- aggregate_data(input_file, name_temperature_column)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Logger.ID, Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE))
# Calculate count of temperature observations per day
n_count <- daily_temperature_ds %>%
group_by(Logger.ID, Date, mean_temperature) %>%
summarise(n = n())
# Merge the count with other summary statistics
daily_temperature_ds <- merge(daily_temperature_ds, n_count, by = c("Logger.ID", "Date"), all.x = TRUE)
return(daily_temperature_ds = daily_temperature_ds)
}
}
data_tests <- aggregate_data(input_file, name_temperature_column)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Logger.ID, Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE))
# Calculate count of temperature observations per day
n_count <- daily_temperature_ds %>%
group_by(Logger.ID, Date, name_temperature_column) %>%
summarise(n = n())
# Merge the count with other summary statistics
daily_temperature_ds <- merge(daily_temperature_ds, n_count, by = c("Logger.ID", "Date"), all.x = TRUE)
return(daily_temperature_ds = daily_temperature_ds)
}
}
data_tests <- aggregate_data(input_file, name_temperature_column)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Logger.ID, Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE))
# Calculate count of temperature observations per day
n_count <- extracted_dates %>%
group_by(Logger.ID, Date, name_temperature_column) %>%
summarise(n = n())
# Merge the count with other summary statistics
daily_temperature_ds <- merge(daily_temperature_ds, n_count, by = c("Logger.ID", "Date"), all.x = TRUE)
return(daily_temperature_ds = daily_temperature_ds)
}
}
data_tests <- aggregate_data(input_file, name_temperature_column)
aggregate_data <- function(input_file, name_temperature_column, daily = TRUE){
source("~/Documents/R-Projects/loggeranalysis/R/helperFunctions.R")
check_file(input_file)
ds <- check_format(input_file)
extracted_dates <- ds[, c('Logger.ID', 'Date', "Time", name_temperature_column)]
if (daily){
# create an empty dataframe for the daily data
daily_temperature_ds <- extracted_dates %>%
group_by(Logger.ID, Date) %>%
summarise(mean_temperature = mean(!!sym(name_temperature_column), na.rm = TRUE),
std_temperature = sd(!!sym(name_temperature_column), na.rm = TRUE),
T_min = min(!!sym(name_temperature_column), na.rm = TRUE),
T_max = max(!!sym(name_temperature_column), na.rm = TRUE))
# Calculate count of temperature observations per day
n_count <- extracted_dates %>%
group_by(Logger.ID, Date, Time) %>%
summarise(n = n())
# Merge the count with other summary statistics
daily_temperature_ds <- merge(daily_temperature_ds, n_count, by = c("Logger.ID", "Date"), all.x = TRUE)
}
}
data_tests <- aggregate_data(input_file, name_temperature_column)
head(data_tests)
